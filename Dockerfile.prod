###########
# BUILDER #
###########

#  Stage 1: Base build stage
FROM python:3.8-slim AS builder

# Create the app directory
RUN mkdir /usr/src/app

#  Set the working directory
WORKDIR /usr/src/app

# Set environment variables to optimize Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# Upgrade pip and install dependencies
RUN pip install --upgrade pip

# Copy the requirements file first (better caching)
COPY ./requirements.txt .

#  Install Python dependencies
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#  copy project
COPY . .

#########
# FINAL #
#########
FROM python:3.8-slim-buster

RUN mkdir -p /home/app

RUN adduser --uid 1000 --system --group app

ENV HOME=/home/app
ENV APP_HOME=/home/app
#  RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/relief
RUN mkdir $APP_HOME/relief/staticfiles
WORKDIR $APP_HOME
RUN python manage.py collectstatic --noinput --settings=relief.settings.production

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

