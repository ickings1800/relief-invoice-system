# Generated by Django 2.0 on 2019-06-29 14:58

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=6)),
                ('tel_no', models.CharField(max_length=8)),
                ('business_no', models.CharField(max_length=10)),
                ('fax_no', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True)),
                ('tel_no', models.CharField(blank=True, max_length=8, null=True)),
                ('fax_no', models.CharField(blank=True, max_length=8, null=True)),
                ('term', models.PositiveSmallIntegerField()),
                ('gst', models.DecimalField(decimal_places=0, default=0.0, max_digits=2)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote_price', models.DecimalField(decimal_places=4, default=0.0, max_digits=6)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_generated', models.DateField(auto_now=True)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('minus', models.DecimalField(decimal_places=4, default=0.0, max_digits=6)),
                ('gst', models.DecimalField(decimal_places=0, default=0.0, max_digits=2)),
                ('original_total', models.DecimalField(decimal_places=4, default=0.0, max_digits=9)),
                ('net_total', models.DecimalField(decimal_places=4, default=0.0, max_digits=9)),
                ('net_gst', models.DecimalField(decimal_places=4, default=0.0, max_digits=9)),
                ('total_incl_gst', models.DecimalField(decimal_places=4, default=0.0, max_digits=9)),
                ('invoice_year', models.IntegerField(null=True)),
                ('invoice_number', models.IntegerField(null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='pos.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=0)),
                ('driver_quantity', models.PositiveSmallIntegerField(default=0)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('unit_price', models.DecimalField(decimal_places=4, default=0.0, max_digits=6)),
                ('packing', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('customerproduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.CustomerProduct')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('specification', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.SmallIntegerField()),
                ('do_number', models.CharField(blank=True, max_length=8)),
                ('note', models.TextField(blank=True, max_length=255, null=True)),
                ('invoice', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pos.Invoice')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('packaging_methods', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='route',
            name='trip',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pos.Trip'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.Route'),
        ),
        migrations.AddField(
            model_name='customerproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.Product'),
        ),
        migrations.AlterUniqueTogether(
            name='orderitem',
            unique_together={('route', 'customerproduct')},
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together={('invoice_year', 'invoice_number')},
        ),
        migrations.AlterUniqueTogether(
            name='customerproduct',
            unique_together={('customer', 'product')},
        ),
    ]
