# Generated by Django 4.0 on 2023-01-31 05:27
import datetime
from decimal import Decimal, ROUND_UP
from django.db import migrations


def update_gst_for_invoice_after_2022(apps, schema_editor):
    invoice_date_greater_than = datetime.date(2022, 12, 31)
    Invoice = apps.get_model('pos', 'Invoice')
    invoices = Invoice.objects.filter(date_created__gt=invoice_date_greater_than)
    for existing_invoice in invoices:
        if existing_invoice.gst > 0:
            net_total = 0
            for orderitem in existing_invoice.orderitem_set.all():
                net_total += (orderitem.driver_quantity * orderitem.unit_price)

            existing_invoice.gst = 8
            gst_decimal = Decimal(existing_invoice.gst / 100)
            net_total -= existing_invoice.minus
            net_gst = (net_total * gst_decimal).quantize(Decimal('.0001'), rounding=ROUND_UP)
            total_incl_gst = (net_total + net_gst).quantize(Decimal('.0001'), rounding=ROUND_UP)

            existing_invoice.net_total = net_total
            existing_invoice.net_gst = net_gst
            existing_invoice.total_incl_gst = total_incl_gst
            existing_invoice.save()

def update_customer_gst(apps, schema_editor):
    Customer = apps.get_model('pos', 'Customer')
    for customer in Customer.objects.all():
        if customer.gst > 0:
            customer.gst = 8
            customer.save()

class Migration(migrations.Migration):

    dependencies = [
        ('pos', '0029_company_freshbooks_account_id_company_user'),
    ]

    operations = [
        migrations.RunPython(update_customer_gst),
        migrations.RunPython(update_gst_for_invoice_after_2022),
    ]
